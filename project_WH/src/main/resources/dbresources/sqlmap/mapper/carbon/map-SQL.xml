<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="carbonMap">

	<select id="sdList" resultType="Map">
		select sd_cd, sd_nm
		from tl_sd
	</select>

	<select id="sggList" parameterType="String" resultType="Map">
		select
		sgg_cd, sgg_nm
		from tl_sgg
		where sd_nm = #{test}
	</select>

	<select id="sggSelect" parameterType="String" resultType="Map">
		SELECT
		bjd_cd, sgg_cd, sum(use_amount) as usage
		FROM "TB_CARBON_A4"
		WHERE
		sgg_cd = #{sggcd}
		group by bjd_cd, sgg_cd
	</select>

	<select id="bum" parameterType="String" resultType="Map">
		SELECT
		max(e.usage), min(e.usage), (max(e.usage) - min(e.usage))/ 5 as
		interval
		FROM (SELECT bjd_cd, bjd_nm, sgg_cd, sum(use_amount) as usage
		FROM "TB_CARBON_A4"
		WHERE sgg_cd = #{sggcd}
		group by bjd_cd, bjd_nm,
		sgg_cd) e
	</select>

	<select id="sdView" parameterType="String" resultType="Map">
		select
		(select ST_XMax(geom) as xmax FROM tl_sd WHERE sd_nm =
		#{sd_nm}::varchar order by xmax desc limit 1),
		(select ST_YMax(geom) as ymax FROM tl_sd WHERE sd_nm = #{sd_nm}::varchar
		order by ymax desc limit 1),
		(select ST_XMin(geom) as xmin FROM tl_sd WHERE sd_nm = #{sd_nm}::varchar
		order by xmin limit 1),
		(select ST_YMin(geom) as ymin FROM tl_sd WHERE sd_nm = #{sd_nm}::varchar
		order by ymin limit 1)
		from tl_sd limit 1
	</select>

	<select id="sggView" parameterType="String" resultType="Map">
		select
		(select ST_XMax(geom) as xmax FROM tl_sgg WHERE sgg_nm =
		#{sggName}::varchar order by xmax desc limit 1),
		(select ST_YMax(geom) as ymax FROM tl_sgg WHERE sgg_nm = #{sggName}::varchar
		order by ymax desc limit 1),
		(select ST_XMin(geom) as xmin FROM tl_sgg WHERE sgg_nm = #{sggName}::varchar
		order by xmin limit 1),
		(select ST_YMin(geom) as ymin FROM tl_sgg WHERE sgg_nm = #{sggName}::varchar
		order by ymin limit 1)
		from tl_sgg limit 1
	</select>

	<insert id="fileUp" parameterType="Map">
		INSERT INTO "TB_CARBON_A4" (use_date, sgg_cd, bjd_cd, use_amount)
		VALUES (#{use_date}, #{sgg_cd}, #{bjd_cd}, #{use_amount}::INTEGER)
	</insert>

	<select id="point" parameterType="Map" resultType="Map">
		<![CDATA[
		select sgg_cd, sgg_nm 
		from (select ST_XMax(geom) as xmax, ST_XMin(geom) as xmin, 
					ST_YMax(geom) as ymax, ST_YMin(geom) as ymin, sgg_cd, sgg_nm 
				from tl_sgg 
				group by sgg_cd, sgg_nm, tl_sgg.geom) point
		where (point.xmax > #{xvalue} and point.xmin < #{xvalue}) and (point.ymax > #{yvalue} and point.ymin < #{yvalue})
		]]>
	</select>

	<select id="totalChart" resultType="Map">
		select sd_nm, sum(use_amount) as usage 
		from "TB_CARBON_A4" 
		where sd_nm is not null 
		group by sd_nm 
	</select>
	
	<select id="sdChart" parameterType="String" resultType="Map">
		select sgg_nm as sd_nm , sum(use_amount) as usage 
		from "TB_CARBON_A4" 
		where sd_nm = #{sdName}
		group by sgg_nm 
	</select>
	
	<select id="sggLegendE" parameterType="String" resultType="Map">
		WITH intervals AS (
		    SELECT 
		        min(amount) AS min_amount,
		        max(amount) AS max_amount,
		        (max(amount) - min(amount)) / 5 AS interval
		    FROM 
		        a4sggtables3 
		    WHERE 
		        sd_cd = #{place}
		    GROUP BY 
		        sd_cd
		),
		numbers AS (
		    SELECT generate_series(0, 4) AS num
		)
		SELECT trunc(intervals.min_amount + (intervals.interval * numbers.num)) AS start, 
		    trunc(intervals.min_amount + (intervals.interval * (numbers.num + 1))) AS end 
		FROM intervals, numbers
	</select>
	
	<select id="sggLegendN" parameterType="String" resultType="Map">
		SELECT unnest (cdb_jenksbins(array_agg(asg1.amount), 5, 0, true)) AS start, 
			unnest (cdb_jenksbins(array_agg(asg1.amount), 5)) AS end 
        FROM a4sggtables3 asg1 
        where asg1.sd_cd = #{place} 
	</select>
	
	<select id="bjdLegendE" parameterType="String" resultType="Map">
		WITH intervals AS (
		    SELECT 
		        min(totalusage) AS min_amount,
		        max(totalusage) AS max_amount,
		        (max(totalusage) - min(totalusage)) / 5 AS interval
		    FROM 
		        a4bjdtable
		    WHERE 
		        sgg_cd = #{place}
		    GROUP BY 
		        sgg_cd
		),
		numbers AS (
		    SELECT generate_series(0, 4) AS num 
		)
		SELECT trunc(intervals.min_amount + (intervals.interval * numbers.num)) AS start, 
		    trunc(intervals.min_amount + (intervals.interval * (numbers.num + 1))) AS end 
		FROM intervals, numbers
	</select>

	<select id="bjdLegendN" parameterType="String" resultType="Map">
	 	SELECT unnest (cdb_jenksbins(array_agg(ab.totalusage), 5, 0, true)) AS start, 
            unnest (cdb_jenksbins(array_agg(ab.totalusage), 5)) AS end 
        FROM a4bjdtable ab
        where ab.sgg_cd = #{place}
	</select>
	

</mapper>